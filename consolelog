kalloc.c: kalloc: create first ref to pa 0xdecd000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdecc000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdecb000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeca000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdec9000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdec8000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdec7000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdec6000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdec5000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdec4000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdec3000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdec2000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdec1000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdec0000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdebf000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdebe000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdebd000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdebc000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdebb000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeba000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeb9000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeb8000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeb7000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeb6000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeb5000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeb4000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeb3000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeb2000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeb1000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeb0000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeaf000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeae000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdead000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeac000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeab000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeaa000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdea9000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdea8000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdea7000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdea6000, currnet ref number = 1
kalloc.c: kIncRef: increased pa 0xdee2000, currnet ref number = 3
kalloc.c: kIncRef: increased pa 0xdee0000, currnet ref number = 3
kalloc.c: kIncRef: increased pa 0xdedf000, currnet ref number = 2
proc.c: fork: np->pid 5 copyied process state from proc, pages in memory=0
proc.c: fork: np->pid 5 before start of copy pages data, pages in memory=0
proc.c: fork: PID 4 np->pid = 5
proc.c: fork: size of buffer in fork: 2048
fs.c: readFromSwapFile: PID 4 wrote to file after fork ,pages in memory= 3
proc.c: fork: PID 4 SUCCESSFULY created new proc np->pid =5, np->pagesInMemory=3
trap.c: trap: PID 4: T_PGFLT on address 0x2fbc
 kalloc.c: kallocWithRef: create first ref to pa 0xdea5000, currnet ref number = 1
kalloc.c: kDecRef: decreased pa 0xdedf000, currnet ref number = 1

trap.c: trap: PID 5 NONE is NOT defined, about to handle_aging_counter
trap.c: trap: PID 5: T_PGFLT on address 0x2fbc
 
trap.c: trap: PID 5 NONE is NOT defined, about to handle_aging_counter
num of fr
trap.c: trap: PID 5 NONE is NOT defined, about to handle_aging_counter
ee pages after
trap.c: trap: PID 5 NONE is NOT defined, about to handle_aging_counter
 firs
trap.c: trap: PID 5 NONE is NOT defined, about to handle_aging_counter
t fork 5
trap.c: trap: PID 5 NONE is NOT defined, about to handle_aging_counter
6530, 

trap.c: trap: PID 5 NONE is NOT defined, about to handle_aging_counter
proc.c: exit: PID 5 about to remove swapFile

trap.c: trap: PID 5 NONE is NOT defined, about to handle_aging_counter
proc.c: wait: PID 4 about to enter freevm for p->pid= 5, p->pagesInMemory=3
vm.c: freevm: PID 4 about to deallocuvm 
vm.c: deallocuvm: PID 4 enter deallocuvm p->pid=5, pages in memory=3, p->pagesInSwap = 0

vm.c: printPagesInSwap: PID 5 SWAP pages list:
vm.c: printPagesInSwap: index: 0, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 1, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 2, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 3, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 4, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 5, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 6, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 7, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 8, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 9, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 10, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 11, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 12, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 13, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 14, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 15, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 16, is_occupied: 0, va: 0xffffffff 

vm.c: pritntProcMemoryPages: PID 5 memory pages list:
vm.c: pritntProcMemoryPages: index: 0, is_occupied: 1, va: 0x0, age: 0, next: 1, prev: -1  
vm.c: pritntProcMemoryPages: index: 1, is_occupied: 1, va: 0x1000, age: 0, next: 2, prev: 0  
vm.c: pritntProcMemoryPages: index: 2, is_occupied: 1, va: 0x2000, age: 0, next: -1, prev: 1  
vm.c: pritntProcMemoryPages: index: 3, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 4, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 5, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 6, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 7, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 8, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 9, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 10, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 11, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 12, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 13, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 14, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 15, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
kalloc.c: kDecRef: decreased pa 0xdee2000, currnet ref number = 2
vm.c: removePageFromMemory: PID 5 removed page(0x0) from memory,p->memoryPages[index].is_occupied =0, pages in memory=2
kalloc.c: kDecRef: decreased pa 0xdee0000, currnet ref number = 2
vm.c: removePageFromMemory: PID 5 removed page(0x1000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=1
kalloc.c: kDecRef: decreased pa 0xdedf000, currnet ref number = 0
kalloc.c: kDecRef: free pa 0xdedf000, currnet ref number = 0
vm.c: removePageFromMemory: PID 5 removed page(0x2000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=0
vm.c: deallocuvm: PID 5 exit deallocuvm
proc.c: exit: PID 4 about to remove swapFile

trap.c: trap: PID 4 NONE is NOT defined, about to handle_aging_counter
proc.c: wait: PID 3 about to enter freevm for p->pid= 4, p->pagesInMemory=3
vm.c: freevm: PID 3 about to deallocuvm 
vm.c: deallocuvm: PID 3 enter deallocuvm p->pid=4, pages in memory=3, p->pagesInSwap = 0

vm.c: printPagesInSwap: PID 4 SWAP pages list:
vm.c: printPagesInSwap: index: 0, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 1, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 2, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 3, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 4, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 5, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 6, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 7, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 8, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 9, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 10, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 11, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 12, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 13, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 14, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 15, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 16, is_occupied: 0, va: 0xffffffff 

vm.c: pritntProcMemoryPages: PID 4 memory pages list:
vm.c: pritntProcMemoryPages: index: 0, is_occupied: 1, va: 0x0, age: 0, next: 1, prev: -1  
vm.c: pritntProcMemoryPages: index: 1, is_occupied: 1, va: 0x1000, age: 0, next: 2, prev: 0  
vm.c: pritntProcMemoryPages: index: 2, is_occupied: 1, va: 0x2000, age: 0, next: -1, prev: 1  
vm.c: pritntProcMemoryPages: index: 3, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 4, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 5, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 6, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 7, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 8, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 9, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 10, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 11, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 12, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 13, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 14, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
vm.c: pritntProcMemoryPages: index: 15, is_occupied: 0, va: 0xffffffff, age: 0, next: -1, prev: -1  
kalloc.c: kDecRef: decreased pa 0xdee2000, currnet ref number = 1
vm.c: removePageFromMemory: PID 4 removed page(0x0) from memory,p->memoryPages[index].is_occupied =0, pages in memory=2
kalloc.c: kDecRef: decreased pa 0xdee0000, currnet ref number = 1
vm.c: removePageFromMemory: PID 4 removed page(0x1000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=1
kalloc.c: kDecRef: decreased pa 0xdea5000, currnet ref number = -2
kalloc.c: kDecRef: free pa 0xdea5000, currnet ref number = -2
vm.c: removePageFromMemory: PID 4 removed page(0x2000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=0
vm.c: deallocuvm: PID 4 exit deallocuvm
ass3Tests: finished first test
ass3Tests: NONE is not defined, skip test 2
ass3Tests: PID 3 start test 3
vm.c: allocuvm: PID 3 enter allocuvm with pgdir of p->pid 3
kalloc.c: kallocWithRef: create first ref to pa 0xdf76000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x3000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 3 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x0 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x1000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x2000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0xffffffff is occupied=0 
kalloc.c: kallocWithRef: create first ref to pa 0xdf75000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x4000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 4 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x0 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x1000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x2000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x3000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0xffffffff is occupied=0 
kalloc.c: kallocWithRef: create first ref to pa 0xdffd000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x5000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 5 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x0 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x1000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x2000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x3000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x4000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0xffffffff is occupied=0 
kalloc.c: kallocWithRef: create first ref to pa 0xdffc000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x6000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 6 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x0 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x1000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x2000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x3000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x4000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x5000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0xffffffff is occupied=0 
kalloc.c: kallocWithRef: create first ref to pa 0xdffb000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x7000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 7 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x0 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x1000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x2000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x3000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x4000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x5000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x6000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0xffffffff is occupied=0 
kalloc.c: kallocWithRef: create first ref to pa 0xdffa000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x8000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 8 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x0 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x1000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x2000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x3000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x4000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x5000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x6000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x7000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0xffffffff is occupied=0 
kalloc.c: kallocWithRef: create first ref to pa 0xdff9000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x9000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 9 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x0 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x1000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x2000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x3000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x4000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x5000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x6000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x7000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0x8000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 9 va=0xffffffff is occupied=0 
kalloc.c: kallocWithRef: create first ref to pa 0xdff8000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0xa000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 10 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x0 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x1000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x2000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x3000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x4000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x5000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x6000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x7000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0x8000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 9 va=0x9000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 10 va=0xffffffff is occupied=0 
kalloc.c: kallocWithRef: create first ref to pa 0xdff7000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0xb000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 11 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x0 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x1000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x2000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x3000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x4000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x5000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x6000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x7000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0x8000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 9 va=0x9000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 10 va=0xa000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 11 va=0xffffffff is occupied=0 
kalloc.c: kallocWithRef: create first ref to pa 0xdff6000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0xc000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 12 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x0 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x1000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x2000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x3000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x4000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x5000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x6000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x7000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0x8000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 9 va=0x9000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 10 va=0xa000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 11 va=0xb000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 12 va=0xffffffff is occupied=0 
kalloc.c: kallocWithRef: create first ref to pa 0xdff5000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0xd000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 13 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x0 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x1000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x2000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x3000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x4000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x5000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x6000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x7000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0x8000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 9 va=0x9000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 10 va=0xa000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 11 va=0xb000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 12 va=0xc000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 13 va=0xffffffff is occupied=0 
kalloc.c: kallocWithRef: create first ref to pa 0xdff4000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0xe000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 14 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x0 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x1000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x2000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x3000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x4000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x5000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x6000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x7000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0x8000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 9 va=0x9000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 10 va=0xa000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 11 va=0xb000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 12 va=0xc000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 13 va=0xd000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 14 va=0xffffffff is occupied=0 
kalloc.c: kallocWithRef: create first ref to pa 0xdff3000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0xf000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x0 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x1000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x2000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x3000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x4000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x5000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x6000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x7000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0x8000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 9 va=0x9000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 10 va=0xa000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 11 va=0xb000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 12 va=0xc000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 13 va=0xd000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 14 va=0xe000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 15 va=0xffffffff is occupied=0 
vm.c: allocuvm: PID 3 has MAX_PSYC_PAGES (p->pagesInMemory = 16) pages in memory, swaping one page out
vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 1 to swap out
vm.c: swapOut: PID 3 about copy page 0x1000 to swapFile at index 0
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0x1000 to swapFile at index 0
kalloc.c: kDecRef: decreased pa 0xdee0000, currnet ref number = 0
kalloc.c: kDecRef: free pa 0xdee0000, currnet ref number = 0
vm.c: swapOut: PID 3: removing page in index 1 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0x1000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 1 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdee0000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x10000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x0 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0xffffffff is occupied=0 
vm.c: allocuvm: PID 3 has MAX_PSYC_PAGES (p->pagesInMemory = 16) pages in memory, swaping one page out
vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 0 to swap out
vm.c: swapOut: PID 3 about copy page 0x0 to swapFile at index 1
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0x0 to swapFile at index 1
kalloc.c: kDecRef: decreased pa 0xdee2000, currnet ref number = 0
kalloc.c: kDecRef: free pa 0xdee2000, currnet ref number = 0
vm.c: swapOut: PID 3: removing page in index 0 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0x0) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 0 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdee2000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x11000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0xffffffff is occupied=0 
vm.c: allocuvm: PID 3 has MAX_PSYC_PAGES (p->pagesInMemory = 16) pages in memory, swaping one page out
vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 3 to swap out
vm.c: swapOut: PID 3 about copy page 0x3000 to swapFile at index 2
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0x3000 to swapFile at index 2
kalloc.c: kDecRef: decreased pa 0xdf76000, currnet ref number = -5
kalloc.c: kDecRef: free pa 0xdf76000, currnet ref number = -5
vm.c: swapOut: PID 3: removing page in index 3 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0x3000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 3 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdf76000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x12000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x11000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x10000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x2000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0xffffffff is occupied=0 
vm.c: allocuvm: PID 3 has MAX_PSYC_PAGES (p->pagesInMemory = 16) pages in memory, swaping one page out
vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 2 to swap out
vm.c: swapOut: PID 3 about copy page 0x2000 to swapFile at index 3
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0x2000 to swapFile at index 3
kalloc.c: kDecRef: decreased pa 0xdf25000, currnet ref number = -4
kalloc.c: kDecRef: free pa 0xdf25000, currnet ref number = -4
vm.c: swapOut: PID 3: removing page in index 2 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0x2000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 2 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdf25000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x13000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x11000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x10000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0xffffffff is occupied=0 
vm.c: allocuvm: PID 3 has MAX_PSYC_PAGES (p->pagesInMemory = 16) pages in memory, swaping one page out
vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 4 to swap out
vm.c: swapOut: PID 3 about copy page 0x4000 to swapFile at index 4
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0x4000 to swapFile at index 4
kalloc.c: kDecRef: decreased pa 0xdf75000, currnet ref number = -6
kalloc.c: kDecRef: free pa 0xdf75000, currnet ref number = -6
vm.c: swapOut: PID 3: removing page in index 4 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0x4000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 4 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdf75000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x14000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x11000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x10000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x13000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x12000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0xffffffff is occupied=0 
vm.c: allocuvm: PID 3 has MAX_PSYC_PAGES (p->pagesInMemory = 16) pages in memory, swaping one page out
vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 5 to swap out
vm.c: swapOut: PID 3 about copy page 0x5000 to swapFile at index 5
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0x5000 to swapFile at index 5
kalloc.c: kDecRef: decreased pa 0xdffd000, currnet ref number = -6
kalloc.c: kDecRef: free pa 0xdffd000, currnet ref number = -6
vm.c: swapOut: PID 3: removing page in index 5 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0x5000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 5 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdffd000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x15000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x11000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x10000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x13000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x12000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x14000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0xffffffff is occupied=0 
vm.c: allocuvm: PID 3 has MAX_PSYC_PAGES (p->pagesInMemory = 16) pages in memory, swaping one page out
vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 6 to swap out
vm.c: swapOut: PID 3 about copy page 0x6000 to swapFile at index 6
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0x6000 to swapFile at index 6
kalloc.c: kDecRef: decreased pa 0xdffc000, currnet ref number = -6
kalloc.c: kDecRef: free pa 0xdffc000, currnet ref number = -6
vm.c: swapOut: PID 3: removing page in index 6 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0x6000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 6 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdffc000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x16000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x11000 is occupied=1 

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x10000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x13000 is occupied=1 

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x12000 is occupied=1 

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x14000 is occupied=1 

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x15000 is occupied=1 

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0xffffffff is occupied=0 

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: allocuvm: PID 3 has MAX_PSYC_PAGES (p->pagesInMemory = 16) pages in memory, swaping one page out

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: swapOut: PID 3: chose page in index 7 to swap out
vm.c: swapOut: PID 3 about copy page 0x7000 to swapFile at index 7

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: swapOut: PID 3 finished copy page 0x7000 to swapFile at index 7
kalloc.c: kDecRef: decreased pa 0xdffb000, currnet ref number = -6
kalloc.c: kDecRef: free pa 0xdffb000, currnet ref number = -6
vm.c: swapOut: PID 3: removing page in index 7 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0x7000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 7 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdffb000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x17000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x11000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x10000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x13000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x12000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x14000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x15000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x16000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0xffffffff is occupied=0 
vm.c: allocuvm: PID 3 has MAX_PSYC_PAGES (p->pagesInMemory = 16) pages in memory, swaping one page out
vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 8 to swap out
vm.c: swapOut: PID 3 about copy page 0x8000 to swapFile at index 8
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0x8000 to swapFile at index 8
kalloc.c: kDecRef: decreased pa 0xdffa000, currnet ref number = -6
kalloc.c: kDecRef: free pa 0xdffa000, currnet ref number = -6
vm.c: swapOut: PID 3: removing page in index 8 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0x8000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 8 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdffa000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x18000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x11000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x10000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x13000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x12000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x14000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x15000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x16000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x17000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0xffffffff is occupied=0 
vm.c: allocuvm: PID 3 has MAX_PSYC_PAGES (p->pagesInMemory = 16) pages in memory, swaping one page out
vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 9 to swap out
vm.c: swapOut: PID 3 about copy page 0x9000 to swapFile at index 9
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0x9000 to swapFile at index 9
kalloc.c: kDecRef: decreased pa 0xdff9000, currnet ref number = -6
kalloc.c: kDecRef: free pa 0xdff9000, currnet ref number = -6
vm.c: swapOut: PID 3: removing page in index 9 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0x9000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 9 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdff9000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x19000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x11000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x10000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x13000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x12000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x14000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x15000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x16000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x17000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0x18000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 9 va=0xffffffff is occupied=0 
vm.c: allocuvm: PID 3 has MAX_PSYC_PAGES (p->pagesInMemory = 16) pages in memory, swaping one page out
vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 10 to swap out
vm.c: swapOut: PID 3 about copy page 0xa000 to swapFile at index 10
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0xa000 to swapFile at index 10
kalloc.c: kDecRef: decreased pa 0xdff8000, currnet ref number = -6
kalloc.c: kDecRef: free pa 0xdff8000, currnet ref number = -6
vm.c: swapOut: PID 3: removing page in index 10 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0xa000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 10 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdff8000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x1a000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x11000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x10000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x13000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x12000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x14000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x15000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x16000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x17000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0x18000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 9 va=0x19000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 10 va=0xffffffff is occupied=0 
vm.c: allocuvm: PID 3 has MAX_PSYC_PAGES (p->pagesInMemory = 16) pages in memory, swaping one page out
vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 11 to swap out
vm.c: swapOut: PID 3 about copy page 0xb000 to swapFile at index 11
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0xb000 to swapFile at index 11
kalloc.c: kDecRef: decreased pa 0xdff7000, currnet ref number = -6
kalloc.c: kDecRef: free pa 0xdff7000, currnet ref number = -6
vm.c: swapOut: PID 3: removing page in index 11 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0xb000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 11 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdff7000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x1b000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x11000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x10000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x13000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x12000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x14000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x15000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x16000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x17000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0x18000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 9 va=0x19000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 10 va=0x1a000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 11 va=0xffffffff is occupied=0 
vm.c: allocuvm: PID 3 has MAX_PSYC_PAGES (p->pagesInMemory = 16) pages in memory, swaping one page out
vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 12 to swap out
vm.c: swapOut: PID 3 about copy page 0xc000 to swapFile at index 12
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0xc000 to swapFile at index 12
kalloc.c: kDecRef: decreased pa 0xdff6000, currnet ref number = -6
kalloc.c: kDecRef: free pa 0xdff6000, currnet ref number = -6
vm.c: swapOut: PID 3: removing page in index 12 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0xc000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 12 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdff6000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x1c000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x11000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x10000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x13000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x12000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x14000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x15000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x16000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x17000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0x18000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 9 va=0x19000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 10 va=0x1a000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 11 va=0x1b000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 12 va=0xffffffff is occupied=0 
vm.c: allocuvm: PID 3 has MAX_PSYC_PAGES (p->pagesInMemory = 16) pages in memory, swaping one page out
vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 13 to swap out
vm.c: swapOut: PID 3 about copy page 0xd000 to swapFile at index 13
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0xd000 to swapFile at index 13
kalloc.c: kDecRef: decreased pa 0xdff5000, currnet ref number = -6
kalloc.c: kDecRef: free pa 0xdff5000, currnet ref number = -6
vm.c: swapOut: PID 3: removing page in index 13 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0xd000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 13 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdff5000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x1d000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x11000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x10000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x13000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x12000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x14000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x15000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x16000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x17000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0x18000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 9 va=0x19000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 10 va=0x1a000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 11 va=0x1b000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 12 va=0x1c000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 13 va=0xffffffff is occupied=0 
vm.c: allocuvm: PID 3 has MAX_PSYC_PAGES (p->pagesInMemory = 16) pages in memory, swaping one page out
vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 14 to swap out
vm.c: swapOut: PID 3 about copy page 0xe000 to swapFile at index 14
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0xe000 to swapFile at index 14
kalloc.c: kDecRef: decreased pa 0xdff4000, currnet ref number = -6
kalloc.c: kDecRef: free pa 0xdff4000, currnet ref number = -6
vm.c: swapOut: PID 3: removing page in index 14 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0xe000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 14 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdff4000, currnet ref number = 1
vm.c: allocuvm: PID 3:  about to pushToMemoryPagesArray va =0x1e000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x11000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x10000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x13000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x12000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x14000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x15000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x16000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x17000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0x18000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 9 va=0x19000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 10 va=0x1a000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 11 va=0x1b000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 12 va=0x1c000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 13 va=0x1d000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 14 va=0xffffffff is occupied=0 
vm.c: allocuvm: PID 3 exit allocuvm ,p->pagesInMemory=16, p->pagesInSwap=15

vm.c: printPagesInSwap: PID 3 SWAP pages list:
vm.c: printPagesInSwap: index: 0, is_occupied: 1, va: 0x1000 
vm.c: printPagesInSwap: index: 1, is_occupied: 1, va: 0x0 
vm.c: printPagesInSwap: index: 2, is_occupied: 1, va: 0x3000 
vm.c: printPagesInSwap: index: 3, is_occupied: 1, va: 0x2000 
vm.c: printPagesInSwap: index: 4, is_occupied: 1, va: 0x4000 
vm.c: printPagesInSwap: index: 5, is_occupied: 1, va: 0x5000 
vm.c: printPagesInSwap: index: 6, is_occupied: 1, va: 0x6000 
vm.c: printPagesInSwap: index: 7, is_occupied: 1, va: 0x7000 

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: printPagesInSwap: index: 8, is_occupied: 1, va: 0x8000 

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: printPagesInSwap: index: 9, is_occupied: 1, va: 0x9000 
vm.c: printPagesInSwap: index: 10, is_occupied: 1, va: 0xa000 

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: printPagesInSwap: index: 11, is_occupied: 1, va: 0xb000 
vm.c: printPagesInSwap: index: 12, is_occupied: 1, va: 0xc000 

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: printPagesInSwap: index: 13, is_occupied: 1, va: 0xd000 

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: printPagesInSwap: index: 14, is_occupied: 1, va: 0xe000 
vm.c: printPagesInSwap: index: 15, is_occupied: 0, va: 0xffffffff 
vm.c: printPagesInSwap: index: 16, is_occupied: 0, va: 0xffffffff 

vm.c: pritntProcMemoryPages: PID 3 memory pages list:

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 0, is_occupied: 1, va: 0x11000, age: 0, next: 3, prev: 1  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 1, is_occupied: 1, va: 0x10000, age: 0, next: 0, prev: 15  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 2, is_occupied: 1, va: 0x13000, age: 0, next: 4, prev: 3  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 3, is_occupied: 1, va: 0x12000, age: 0, next: 2, prev: 0  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 4, is_occupied: 1, va: 0x14000, age: 0, next: 5, prev: 2  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 5, is_occupied: 1, va: 0x15000, age: 0, next: 6, prev: 4  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 6, is_occupied: 1, va: 0x16000, age: 0, next: 7, prev: 5  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 7, is_occupied: 1, va: 0x17000, age: 0, next: 8, prev: 6  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 8, is_occupied: 1, va: 0x18000, age: 0, next: 9, prev: 7  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 9, is_occupied: 1, va: 0x19000, age: 0, next: 10, prev: 8  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 10, is_occupied: 1, va: 0x1a000, age: 0, next: 11, prev: 9  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 11, is_occupied: 1, va: 0x1b000, age: 0, next: 12, prev: 10  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 12, is_occupied: 1, va: 0x1c000, age: 0, next: 13, prev: 11  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 13, is_occupied: 1, va: 0x1d000, age: 0, next: 14, prev: 12  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 14, is_occupied: 1, va: 0x1e000, age: 0, next: -1, prev: 13  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
vm.c: pritntProcMemoryPages: index: 15, is_occupied: 1, va: 0xf000, age: 0, next: 1, prev: -1  

trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
trap.c: trap: PID 3: T_PGFLT on address 0x581
 trap.c: trap: PID 3: pagefault, page is in swap on address 0x581
 vm.c: loadPageToMemory: PID 3: enter loadPageToMemory of page 0x0 for va 0x581 vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 15 to swap out
vm.c: swapOut: PID 3 about copy page 0xf000 to swapFile at index 15
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0xf000 to swapFile at index 15
kalloc.c: kDecRef: decreased pa 0xdff3000, currnet ref number = -6
kalloc.c: kDecRef: free pa 0xdff3000, currnet ref number = -6
vm.c: swapOut: PID 3: removing page in index 15 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0xf000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 15 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdff3000, currnet ref number = 1
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 15
vm.c: loadPageToMemory: PID 3:  about to pushToMemoryPagesArray va =0x0
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x11000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0x10000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 2 va=0x13000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 3 va=0x12000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 4 va=0x14000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 5 va=0x15000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 6 va=0x16000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 7 va=0x17000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 8 va=0x18000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 9 va=0x19000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 10 va=0x1a000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 11 va=0x1b000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 12 va=0x1c000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 13 va=0x1d000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 14 va=0x1e000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 15 va=0xffffffff is occupied=0 
vm.c: loadPageToMemory: PID 3:  SUCCESSFULY pushToMemoryPagesArray va =0x0
vm.c: loadPageToMemory: PID 3: about removeFromPagesInSwap index 1 va =0x0
vm.c: loadPageToMemory: PID 3: SUCCESSFULY removed removeFromPagesInSwap index 1 
vm.c: loadPageToMemory: PID 3: SUCCESSFULY loadPageToMemory pageVA 0x0 , exit the func with 0
trap.c: trap: PID 3: T_PGFLT on address 0x2fac
 trap.c: trap: PID 3: pagefault, page is in swap on address 0x2fac
 vm.c: loadPageToMemory: PID 3: enter loadPageToMemory of page 0x2000 for va 0x2fac vm.c: swapOut: enter swapOut for p->pid 3
vm: selectPageToSwap: PID 3: select page by SCFIFO policy 
vm.c: swapOut: PID 3: chose page in index 1 to swap out
vm.c: swapOut: PID 3 about copy page 0x10000 to swapFile at index 1
fs.c: writeToSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
vm.c: swapOut: PID 3 finished copy page 0x10000 to swapFile at index 1
kalloc.c: kDecRef: decreased pa 0xdee0000, currnet ref number = -2
kalloc.c: kDecRef: free pa 0xdee0000, currnet ref number = -2
vm.c: swapOut: PID 3: removing page in index 1 from p->memoryPages
vm.c: removePageFromMemory: PID 3 removed page(0x10000) from memory,p->memoryPages[index].is_occupied =0, pages in memory=15
vm.c: swapOut: p->pid 3 removed page in index 1 from memory 
kalloc.c: kallocWithRef: create first ref to pa 0xdee0000, currnet ref number = 1
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 15
vm.c: loadPageToMemory: PID 3:  about to pushToMemoryPagesArray va =0x2000
vm.c: pushToMemoryPagesArray: enter with p->pid 3, p->pagesInMemory = 15 
vm.c: pushToMemoryPagesArray: p->pid 3 index 0 va=0x11000 is occupied=1 
vm.c: pushToMemoryPagesArray: p->pid 3 index 1 va=0xffffffff is occupied=0 
vm.c: loadPageToMemory: PID 3:  SUCCESSFULY pushToMemoryPagesArray va =0x2000
vm.c: loadPageToMemory: PID 3: about removeFromPagesInSwap index 3 va =0x2000
vm.c: loadPageToMemory: PID 3: SUCCESSFULY removed removeFromPagesInSwap index 3 
vm.c: loadPageToMemory: PID 3: SUCCESSFULY loadPageToMemory pageVA 0x2000 , exit the func with 0
ass3Tests:  alocated buff
proc.c: allocproc: PID 6 start initializing proc  current pages in memory=0
kalloc.c: kalloc: create first ref to pa 0xdff2000, currnet ref number = 1
proc.c: allocproc: PID 6 about to initialize p->pagesInMemory=0 ,  current pages in memory=0
proc.c: fork: np->pid 6 allocated process, pages in memory=0
kalloc.c: kalloc: create first ref to pa 0xdff1000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdff0000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfef000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfee000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfed000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfec000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfeb000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfea000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfe9000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfe8000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfe7000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfe6000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfe5000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfe4000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfe3000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfe2000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfe1000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfe0000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfdf000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfde000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfdd000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfdc000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfdb000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfda000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfd9000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfd8000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfd7000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfd6000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfd5000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfd4000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfd3000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfd2000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfd1000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfd0000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfcf000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfce000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfcd000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfcc000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfcb000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfca000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfc9000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfc8000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfc7000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfc6000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfc5000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfc4000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfc3000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfc2000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfc1000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfc0000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfbf000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdf24000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdea5000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdfbc000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdf27000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdea7000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdea8000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdea9000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeaa000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeab000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeac000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdead000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeae000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeaf000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeb0000, currnet ref number = 1
kalloc.c: kalloc: create first ref to pa 0xdeb1000, currnet ref number = 1
kalloc.c: kIncRef: increased pa 0xdff3000, currnet ref number = 2
kalloc.c: kIncRef: increased pa 0xdee0000, currnet ref number = 2
kalloc.c: kIncRef: increased pa 0xdee2000, currnet ref number = 2
kalloc.c: kIncRef: increased pa 0xdf76000, currnet ref number = 2
kalloc.c: kIncRef: increased pa 0xdf25000, currnet ref number = 2
kalloc.c: kIncRef: increased pa 0xdf75000, currnet ref number = 2
kalloc.c: kIncRef: increased pa 0xdffd000, currnet ref number = 2
kalloc.c: kIncRef: increased pa 0xdffc000, currnet ref number = 2
kalloc.c: kIncRef: increased pa 0xdffb000, currnet ref number = 2
kalloc.c: kIncRef: increased pa 0xdffa000, currnet ref number = 2
kalloc.c: kIncRef: increased pa 0xdff9000, currnet ref number = 2
kalloc.c: kIncRef: increased pa 0xdff8000, currnet ref number = 2
kalloc.c: kIncRef: increased pa 0xdff7000, currnet ref number = 2
kalloc.c: kIncRef: increased pa 0xdff6000, currnet ref number = 2
kalloc.c: kIncRef: increased pa 0xdff5000, currnet ref number = 2
kalloc.c: kIncRef: increased pa 0xdff4000, currnet ref number = 2
proc.c: fork: np->pid 6 copyied process state from proc, pages in memory=0
proc.c: fork: np->pid 6 before start of copy pages data, pages in memory=0
proc.c: fork: PID 3 np->pid = 6
proc.c: fork: size of buffer in fork: 2048
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
fs.c: writeToSwapFile: PID 6 wrote to file after fork ,pages in memory= 16
fs.c: readFromSwapFile: PID 3 wrote to file after fork ,pages in memory= 16
proc.c: fork: PID 3 SUCCESSFULY created new proc np->pid =6, np->pagesInMemory=16
trap.c: trap: PID 6: T_PGFLT on address 0x2fbc
 
trap.c: trap: PID 3 NONE is NOT defined, about to handle_aging_counter
trap.c: trap: PID 3: T_PGFLT on address 0x2fbc
 PID 3: trap.c: trap: T_PGFLT we couldnt cach, address 0x2fbc *pte=0xdee0865
lapicid 0: panic: panicccc
 80106de1 8010697f 0 0 0 0 0 0 0 0os202@os202-lubuntu:~/Desktop/maya/xv6$ 
 865 
 0x800 COW
 0x040 dirty
 0x020 a
 0x004 U
 0x001 P 