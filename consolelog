os202@os202-lubuntu:~/Desktop/xv6-public$ make qemu
gcc -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer -fno-stack-protector -fno-pie -no-pie   -c -o trap.o trap.c
ld -m    elf_i386 -T kernel.ld -o kernel entry.o bio.o console.o exec.o file.o fs.o ide.o ioapic.o kalloc.o kbd.o lapic.o log.o main.o mp.o picirq.o pipe.o proc.o sleeplock.o spinlock.o string.o swtch.o syscall.o sysfile.o sysproc.o trapasm.o trap.o uart.o vectors.o vm.o  -b binary initcode entryother
objdump -S kernel > kernel.asm
objdump -t kernel | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' > kernel.sym
dd if=/dev/zero of=xv6.img count=10000
10000+0 records in
10000+0 records out
5120000 bytes (5.1 MB, 4.9 MiB) copied, 0.0486703 s, 105 MB/s
dd if=bootblock of=xv6.img conv=notrunc
1+0 records in
1+0 records out
512 bytes copied, 0.000248371 s, 2.1 MB/s
dd if=kernel of=xv6.img seek=1 conv=notrunc
369+1 records in
369+1 records out
189104 bytes (189 kB, 185 KiB) copied, 0.00202032 s, 93.6 MB/s
qemu-system-i386 -serial mon:stdio -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 2 -m 512 
xv6...
cpu1: starting 1
cpu0: starting 0
sb: size 1000 nblocks 941 ninodes 200 nlog 30 logstart 2 inodestart 32 bmap start 58
init: starting sh
$ signalTest
TEST: uint sigprocmask(uint): 
TEST: uint sigprocmask(uint) doesnt update mask
TEST: uint sigaction(): 
TEST: uint sigaction(): not changing process signal handlers
TEST: uint kill(int,int): 
TEST: uint kill(int,int): Sent SIGKILL to PID:7 
trap.c: handleSignal:9 is a pending signal and not blocked.
trap.c: handleSignal: p->signal_Handlers[9] = 0 
TEST: uint kill(int,int): PASSED cpid(from wait)=7  
trap.c: handleSignal:9 is a pending signal and not blocked.
trap.c: handleSignal: p->signal_Handlers[9] = 0 
FINISHED UTILITIES TESTS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
TEST 1: create new procSignalsData from default procSignalsData settings
TEST 1 PASSED
TEST 2: create new procSignalsData with custom signal mask and custom signal handlers
TEST 2 PASSED
TEST 3: create new procSignalsData with custom signal mask and custom signal handlers
TEST 5: check user handler behavor
TEST 5: PID:0 sigmask =  80000000 
TEST 5: act->sigmask =  0 .  
TEST 5: act.sa_handler =  330 .  
TESTTEST 5: sending signal '5' from pid: 12 TO pid: 11 
trap.c: handleSignal:5 is a pending signal and not blocked.
trap.c: handleSignal: p->signal_Handlers[5] = 330 
trap.c: handleSignal: handling user handler for signal:5 on pid: 11
trap.c: handleSignal: reset pending signals 5
trap.c: handleSignal: backupd signal_mask 5
proc.c: handleSignal: exit back to trap
pid 11 signalTest: trap 14 err 5 on cpu 1 eip 0x22 addr 0xfff0e483--kill proc
pid 3 signalTest: trap 14 err 5 on cpu 1 eip 0xffffffff addr 0xffffffff--kill proc
$ zombie!